package com.olbareum.olbareum.pronunciation

import android.content.Context

object PronunciationSentenceData {
    val data: Map<String, List<Pair<String, String>>> = mapOf(
        "잇몸소리\n(ㅅ, ㅈ, ㅆ, ㅉ, ㅊ)" to listOf(
            Pair("0_0", "사자는 숲 속에서 살아요."),
            Pair("0_1", "짜장면을 시켰는데 아직 안 왔어."),
            Pair("0_2", "쌀로 밥을 짓고 찌개를 끓였어."),
            Pair("0_3", "차가운 창문이 바람 때문에 흔들려요."),
            Pair("0_4", "자전거를 타고 시장까지 갔다."),
            Pair("0_5", "싸움이 끝나면 차례를 지켜야 해."),
            Pair("0_6", "친구와 짝이 되어 숙제를 했어."),
            Pair("0_7", "산속에서 사슴이 뛰어다닌다."),
            Pair("0_8", "종이가 찢어져서 수업에 쓸 수 없어요."),
            Pair("0_9", "철수는 차가운 얼음 위에서 넘어졌어요.")
        ),
        "모음\n(ㅏ, ㅓ, ㅗ, ㅜ, ㅡ, ㅣ)" to listOf(
            Pair("1_0", "가방에 공책과 연필을 넣었어."),
            Pair("1_1", "오늘은 너무 추워서 옷을 많이 입었어."),
            Pair("1_2", "바람이 불어서 바다가 잔잔해졌어."),
            Pair("1_3", "커다란 나무가 우뚝 서 있다."),
            Pair("1_4", "오래된 사진 속에서 엄마를 봤어."),
            Pair("1_5", "아이들이 놀이터에서 신나게 뛰놀고 있어."),
            Pair("1_6", "우유 한 잔을 마시고 아침을 먹었어."),
            Pair("1_7", "문을 열고 나가니 시원한 바람이 불었어."),
            Pair("1_8", "학교에 가는 길에 커다란 고양이를 만났어."),
            Pair("1_9", "물속에서 물고기가 헤엄치고 있어.")
        ),
        "기본 받침\n(ㅁ, ㄴ, ㅇ, ㄱ 등)" to listOf(
            Pair("2_0", "봄이 오면 산에 꽃이 핀다."),
            Pair("2_1", "감나무 아래에서 반짝이는 열매를 봤다."),
            Pair("2_2", "강물이 산에서 흘러내린다."),
            Pair("2_3", "동네 사람들이 다 같이 모였다."),
            Pair("2_4", "공이 박스 안에 들어 있었다."),
            Pair("2_5", "벽에 강아지 그림이 걸려 있다."),
            Pair("2_6", "박쥐가 낮에는 어두운 동굴에 숨어 있다."),
            Pair("2_7", "맛있는 빵을 가게에서 샀다."),
            Pair("2_8", "달빛이 밝은 밤하늘을 비춘다."),
            Pair("2_9", "바닷가에서 물을 한가득 떠왔다.")
        ),
        "겹받침\n(ㄺ, ㄶ, ㅄ 등)" to listOf(
            Pair("3_0", "책값이 너무 비싸서 고민이야."),
            Pair("3_1", "산 중턱에서 닭이 울었다."),
            Pair("3_2", "넓은 마당에 사람들이 모였다."),
            Pair("3_3", "많은 아이들이 함께 놀고 있었다."),
            Pair("3_4", "늙은 나무가 강바람에 흔들렸다."),
            Pair("3_5", "많은 이들이 삶의 의미를 찾고 있다."),
            Pair("3_6", "값싼 물건이 오래 쓰긴 어렵지."),
            Pair("3_7", "넓은 공터에서 애들이 뛰어놀고 있어.")
        ),
        "일상생활 표현" to listOf(
            Pair("4_0", "식사 하셨어요?"),
            Pair("4_1", "잠깐만 기다려 주세요."),
            Pair("4_2", "지금 어디에 계세요?"),
            Pair("4_3", "어떻게 지냈어?"),
            Pair("4_4", "다음 주에 시간 괜찮으세요?"),
            Pair("4_5", "문 좀 닫아주실래요?"),
            Pair("4_6", "오늘 점심 뭐 먹을까요?"),
            Pair("4_7", "요즘 날씨가 많이 추워졌어."),
            Pair("4_8", "이거 어떻게 하는 거야?"),
            Pair("4_9", "그동안 잘 지냈어?")
        ),
        "된소리와 예사소리\n(ㄱ, ㄲ, ㅋ 등)" to listOf(
            Pair("5_0", "고기를 구워서 김치랑 먹었어."),
            Pair("5_1", "깊은 산 속에서 꿩을 보았다."),
            Pair("5_2", "파란 풍선이 빠르게 날아갔다."),
            Pair("5_3", "토끼가 커다란 풀숲에서 뛰놀고 있다."),
            Pair("5_4", "달빛이 밝아서 별이 더 잘 보여."),
            Pair("5_5", "새벽에 닭이 크게 울었다."),
            Pair("5_6", "빠른 자동차가 커브를 돌았다."),
            Pair("5_7", "큰 박스를 열어서 물건을 꺼냈어."),
            Pair("5_8", "따뜻한 국을 한 그릇 먹었어."),
            Pair("5_9", "책을 펴고 펜으로 이름을 적었어.")
        ),
        "받침동화\n(국물 [궁물])" to listOf(
            Pair("6_0", "독립운동은 나라를 지키기 위한 희생이었다."),
            Pair("6_1", "국물이 뜨거우니 조심히 먹어."),
            Pair("6_2", "박물관에서 옛날 물건들을 구경했다."),
            Pair("6_3", "앞문이 잠겨 있어서 뒷문으로 들어갔다."),
            Pair("6_4", "책받침이 책상 위에 놓여 있었다."),
            Pair("6_5", "옷매무새를 단정히 하고 출근했다."),
            Pair("6_6", "막내 동생이 숙제를 다 끝냈어."),
            Pair("6_7", "잡는 손에 힘을 주고 다시 시도해."),
            Pair("6_8", "꽃망울이 터지며 봄이 왔다."),
            Pair("6_9", "빛나는 별이 밤하늘을 장식했다.")
        ),
        "구개음화\n(굳이 [구지])" to listOf(
            Pair("7_0", "같이 가는 사람이 있어."),
            Pair("7_1", "굳이 지금 해야 할 필요는 없어."),
            Pair("7_2", "나뭇잎이 바람에 흔들렸다."),
            Pair("7_3", "닫히는 문을 조심해."),
            Pair("7_4", "받히지 않도록 뒤를 잘 봐."),
            Pair("7_5", "같이 공부하니까 더 재미있다."),
            Pair("7_6", "굳이 이유를 말할 필요는 없어."),
            Pair("7_7", "꽃잎이 하나둘씩 떨어졌다."),
            Pair("7_8", "닫히는 창문에서 큰 소리가 났다."),
            Pair("7_9", "받히면 위험하니까 천천히 움직여.")
        ),
        "강한 유기음과\n약한 무기음\n(ㅋ, ㅌ, ㅍ, ㅊ\n↔ ㄱ, ㄷ, ㅂ, ㅈ)" to listOf(
            Pair("8_0", "카페에서 커피를 마셨다."),
            Pair("8_1", "가게에서 물건을 샀다."),
            Pair("8_2", "포도를 먹고 보도를 걸었다."),
            Pair("8_3", "치즈를 좋아하는 아이가 많다."),
            Pair("8_4", "기차를 타고 도시로 갔다."),
            Pair("8_5", "커다란 꽃이 정원에 피었다."),
            Pair("8_6", "파란 풍선이 하늘로 떠올랐다."),
            Pair("8_7", "바람이 불어서 불꽃이 흔들렸다."),
            Pair("8_8", "캔디를 먹으면서 책을 읽었다."),
            Pair("8_9", "택시를 타고 공항에 도착했다.")
        )
    )

    // 문장 -> 코드 맵
    private val sentenceToCodeMap: Map<String, String> = data.values.flatten().associate { it.second to it.first }

    // 주어진 문장에 해당하는 코드를 반환
    private fun getCodeBySentence(sentence: String): String {
        return sentenceToCodeMap[sentence] ?: ""
    }

    fun getRawResourceIdBySentence(context: Context, sentence: String): Int {
        val sentenceCode = getCodeBySentence(sentence)
        val resourceName = "p$sentenceCode"
        return context.resources.getIdentifier(resourceName, "raw", context.packageName)
    }
}
